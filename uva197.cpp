#include <cstdio>
#include <cstring>
#include <queue>
#include <stack>
#include <vector>
#include <cmath>
#include <algorithm>
#include <fstream>
#include <set>
#include <map>

#include <cstdlib>
#include <iomanip>
#include <ctime>
#include <sstream>
#include <list>
#include <cctype>
#include <bitset>

using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef pair<int,int> PII;

#define PB push_back
#define MP make_pair
#define MS(m,what)		memset(m,what,sizeof(m))
#define FOR(i,a,b)		for( int i = (a) ; i < (b) ; i ++ )
#define FOE(i,a,b)		for( int i = (a) ; i <=(b) ; i ++ )
#define FOD(i,a,b)		for( int i = (a) ; i >=(b) ; i -- )
#define SS(a)			scanf("%d",&a)
#define LL(a)			((a)<<1)
#define RR(a)			((a)<<1|1)
#define SZ(a)			((int)a.size())
#define two(x)			((LL)1<<(x))
#define include(a,b)	(((a)&(b))==(b))
#define PP(n,m,a)		puts("---");FF(i,n){FF(j,m)cout << a[i][j] << ' ';puts("");}

template<class T> inline T countbit(T n)	{return n?1+countbit(n&(n-1)):0;}
template<class T> inline T sqr(T a)	{return a*a;}
template<class T> inline void checkmin(T &a,T b)	{if(a == -1 || a > b)a = b;}
template<class T> inline void checkmax(T &a,T b)	{if(a < b)	a = b;}

const double eps = 1e-11;
const double Pi = acos(-1.0);
int dx[] = {-1,0,1,0};//up Right down Left
int dy[] = {0,1,0,-1};

const int INF = 0x1fffffff;
const int N = 1000007;

int x[N],y[N],z[N], n;
int dir[6][3]={{0,0,1},{0,0,-1},{0,1,0},{0,-1,0},{1,0,0},{-1,0,0}};
int h[N];

bool vis(int state){
    int i;
    for(i = state%N; h[i]; i=(i+1)%N) if(h[i]==state) return true;
    h[i]=state; return false;
}

void Rx(){FOR(i, 0, n){int t=y[i];y[i]=-z[i]; z[i]=t;}}
void Ry(){FOR(i, 0, n){int t=x[i];x[i]=-z[i]; z[i]=t;}}
void Rz(){FOR(i, 0, n){int t=y[i];y[i]=-x[i]; x[i]=t;}}
void Move(int i){FOR(j,0,n) x[j]+=dir[i][0],y[j]+=dir[i][1],z[j]+=dir[i][2];}

int check(){
    FOR(i, 0, n)
        if(x[i]<0)return 4;
        else if(x[i]>2)return 5;
        else if(y[i]<0)return 2;
        else if(y[i]>2)return 3;
        else if(z[i]<0)return 0;
        else if(z[i]>2)return 1;
    return -1;
}

void dfs(){
    if(check()>=0) return;
    int state = 0;
    FOR(i, 0, n) state|=(1<<(x[i]*9+y[i]*3+z[i]));
    if(vis(state)) return ;
    FOR(i, 0, 6){
        Move(i);
        dfs();
        Move(i^1);
    }
}
/*
void RR11(){
    memset(h,0,sizeof h);
    FOR(i,0,4){Rx();
        FOR(j,0,4){Ry();
            FOR(k,0,4){Rz();
                while(check()>=0) Move(check());
                dfs();
            }
        }
    }
    int cnt = 0;
    sort(h,h+N);
    FOR(i, 0, N) if(h[i]){cnt++;cout<<h[i]<<',';}
    cout<<endl<<cnt<<endl;
}
*/
int an=144,a[144]={15,39,57,60,75,120,147,150,201,210,294,312,402,420,456,480,519,585,1170,2055,2340,3585,3588,4152,7680,16440,19968,28680,28704,29184,30720,32841,33216,37377,37440,38400,61440,65682,74754,74880,75264,76800,102912,107520,131364,131520,149508,149760,150528,159744,205824,215040,229440,229632,233472,245760,262659,262665,265728,299520,525315,525318,525330,599040,786945,787458,1050630,1050660,1052160,1198080,1573890,1574916,1835520,1837056,2101257,2101272,2101320,2125824,2359809,2363400,3932160,4202514,4202520,4202544,4202640,4719618,4726800,6295560,6299664,8405028,8405040,8405280,8417280,9439236,9453600,10223616,12591120,12599328,14684160,14696448,14942208,15728640,16810056,16810176,16814592,17006592,18878472,18907200,19137024,19169280,19660800,31457280,33620112,33620160,33620352,33629184,37756944,37814400,38274048,38338560,38535168,39321600,50364480,50397312,52690944,55050240,67240224,67240320,67258368,67338240,75513888,75628800,76548096,76677120,77070336,81788928,100728960,100794624,105381888,110100480,117473280,117571584,119537664,125829120};
int s[7][150] = {
    {},
    {144,11,19,22,25,26,38,50,52,88,152,176,200,208,304,400,416,515,521,1027,1030,1042,1537,1538,2054,2084,3074,3076,4105,4120,4168,4609,4616,5632,8210,8216,8240,8336,9218,9232,9728,11264,12296,12304,12800,13312,16420,16432,16672,18436,18464,19456,24592,24608,25600,26624,32840,32960,36872,36928,45056,65680,65728,65920,73744,73856,77824,90112,98368,98432,102400,106496,131360,131456,147488,147712,155648,196736,196864,204800,212992,263680,266752,525824,527360,533504,786944,787456,1051648,1067008,1573888,1574912,2101760,2109440,2134016,2359808,2363392,2883584,4203520,4206592,4218880,4268032,4719616,4726784,4980736,5767168,6295552,6299648,6553600,6815744,8407040,8413184,8536064,9439232,9453568,9961472,12591104,12599296,13107200,13631488,16814080,16875520,18878464,18907136,23068672,33628160,33652736,33751040,37756928,37814272,39845888,46137344,50364416,50397184,52428800,54525952,67256320,67305472,75513856,75628544,79691776,100728832,100794368,104857600,109051904},
    {72,23,58,89,154,178,184,308,464,1031,3586,4169,8248,8338,11776,16676,28688,29696,37384,45568,65984,74768,78848,91136,94208,149536,157696,229504,237568,263681,266753,525826,527362,527872,533506,1051652,1067012,1836032,2101768,2109448,2134024,2134528,4203536,4206608,4218896,4222976,4268048,4269056,6029312,8407072,8413216,8536096,8538112,14688256,15204352,16814144,16875584,19140608,23330816,33628288,33652864,33751168,33783808,38281216,40370176,46661632,48234496,67256576,67305728,76562432,80740352,117506048,121634816},
    {72,30,51,90,153,180,240,306,408,1542,3075,4680,9360,12336,15360,18720,24600,26112,36873,46080,73746,78336,92160,98688,122880,147492,156672,196800,208896,263682,266760,525825,527364,533520,789504,1051650,1067040,1574400,2101761,2109456,2134080,2396160,4203522,4206600,4218912,4268160,4792320,6316032,7864320,8407044,8413200,8536320,9584640,12595200,13369344,16814088,16875648,18878976,23592960,33628176,33652800,33751296,37757952,40108032,47185920,50528256,62914560,67256352,67305600,75515904,80216064,100761600,106954752},
    {64,523,1043,1046,2086,4121,4184,5633,8218,8242,8344,8368,9730,11266,12808,13328,16436,16688,19460,25616,26656,32968,45064,65744,65936,77840,90128,102464,106624,131488,155680,204928,213248,267776,534016,535552,1068032,2109952,2142208,2884096,4207616,4219904,4272128,4284416,4981760,5768192,6557696,6823936,8415232,8544256,9963520,13115392,13647872,16879616,23072768,33660928,33759232,39854080,46145536,52461568,54591488,67321856,79708160,104923136,109182976},
    {96,531,1050,1062,1545,2100,3090,4107,4248,4632,5634,8214,8217,8400,8496,9219,9264,9744,11268,12306,12360,12801,13320,16434,16800,18438,19488,24612,24720,25602,26640,32856,37056,45072,65712,65736,73752,74112,77952,90144,98448,102408,106560,131472,147504,155904,196896,204816,213120,271872,537600,543744,791040,1075200,1582080,2102784,2174976,2371584,2884608,4205568,4207104,4300800,4349952,4720128,4743168,4988928,5769216,6300672,6328320,6554112,6819840,8414208,8601600,9440256,9977856,12601344,12656640,13108224,13639680,16822272,18972672,23076864,33644544,33656832,37761024,37945344,39911424,46153728,50405376,52432896,54558720,67313664,75522048,79822848,100810752,104865792,109117440},
    {96,537,1035,1074,1554,2070,3108,4122,4296,4611,5640,8211,8244,8280,8592,9222,9240,9729,11280,12297,12432,12816,13314,16422,16560,18480,19458,24594,24864,25632,26628,32976,36888,45120,65688,65952,73776,73920,77832,90240,98376,102528,106512,131376,147840,155664,196752,205056,213024,274944,529920,549888,795648,1059840,1591296,2110464,2199552,2360832,2887680,4204032,4220928,4239360,4399104,4721664,4730880,4981248,5775360,6296064,6365184,6561792,6816768,8408064,8478720,9461760,9962496,12592128,12730368,13123584,13633536,16883712,18886656,23101440,33632256,33767424,37773312,37847040,39849984,46202880,50368512,52494336,54534144,67264512,75694080,79699968,100737024,104988672,109068288}
};

int ans[10];
char cube[28];

void print(){
    FOR(i, 0, 7)
        FOR(j,0,27)
            if((1<<j)&ans[i])
                cube[j] = 'a'+i;
    printf("%s\n",cube);
}

void d(int i, int state){
    if(i>=7) {print();return;}
    //if(vis(state)) return;
    FOE(j,1,s[i][0]){
        if(state&s[i][j]) continue;
        ans[i] = s[i][j];
        d(i+1, state|s[i][j]);
    }
}

int main(){
    #ifndef ONLINE_JUDGE
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    #endif

    cube[27]='\0';
    char str[100];
    while(~scanf("%s",str)){
        memset(h,0,sizeof h);
        s[0][0] = n=0;
        FOR(i,0,27){
            if(str[i]=='a'){
                x[n]=i/9; y[n]=i%9/3; z[n++]=i%3;
            }
        }

        int state = 0 ,flag=0;
        FOR(i, 0, n) state|=(1<<(x[i]*9+y[i]*3+z[i]));
        FOR(i, 0, an) if(state==a[i]) {flag=1; break;}
        if(flag==0) {printf("\n"); continue;}

        dfs();
        FOR(i,0,N) if(h[i]) s[0][++s[0][0]]=h[i];
        d(0,0);
        printf("\n");
    }

/*
    n=4;
    x[0]=y[0]=z[0]=0;
    x[1]=0,y[1]=0,z[1]=1;
    x[2]=0,y[2]=0,z[2]=2;
    x[3]=0,y[3]=1,z[3]=2;
    RR11();


    n=3;
    x[0]=y[0]=z[0]=0;
    x[1]=0,y[1]=1,z[1]=0;
    x[2]=0,y[2]=0,z[2]=1;








    n=4;
    x[0]=y[0]=z[0]=0;
    x[1]=0,y[1]=1,z[1]=0;
    x[2]=0,y[2]=1,z[2]=1;
    x[3]=0,y[3]=2,z[3]=1;


    n=4;
    x[0]=y[0]=z[0]=0;
    x[1]=0,y[1]=0,z[1]=1;
    x[2]=0,y[2]=1,z[2]=1;
    x[3]=1,y[3]=0,z[3]=1;


    n=4;
    x[0]=1,y[0]=0,z[0]=0;
    x[1]=1,y[1]=0,z[1]=1;
    x[2]=1,y[2]=1,z[2]=1;
    x[3]=0,y[3]=1,z[3]=1;*/

  /*  n=4;
    x[0]=0,y[0]=1,z[0]=0;
    x[1]=0,y[1]=1,z[1]=1;
    x[2]=1,y[2]=1,z[2]=1;
    x[3]=1,y[3]=0,z[3]=1;RR11();
    */

    return 0;
}















